# jstd_hashmapConfig.cmake
# --------------------
#
# jstd_hashmap cmake module.
# This module sets the following variables in your project::
#
#   jstd_hashmap_FOUND - true if jstd and all required components found on the system
#   jstd_hashmap_VERSION - jstd version in format Major.Minor.Release
#   jstd_hashmap_INCLUDE_DIRS - Directory where jstd header is located.
#   jstd_hashmap_INCLUDE_DIR - same as DIRS
#   jstd_hashmap_LIBRARIES - jstd library to link against.
#   jstd_hashmap_LIBRARY - same as LIBRARIES
#
#
# Available components::
#
##   shared - search for only shared library
##   static - search for only static library
#   serial - search for unthreaded library
#   pthread - search for native pthread threaded library
#   openmp - search for OpenMP threaded library
#
#
# Exported targets::
#
# If jstd_hashmap is found, this module defines the following :prop_tgt:`IMPORTED`
## target. Target is shared _or_ static, so, for both, use separate, not
## overlapping, installations. ::
#
#   jstd_hashmap::jstd_hashmap - the main jstd library #with header & defs attached.
#
#
# Suggested usage::
#
#   find_package(jstd_hashmap)
#   find_package(jstd_hashmap 0.2.20 EXACT CONFIG REQUIRED COMPONENTS pthread)
#
#
# The following variables can be set to guide the search for this package::
#
#   jstd_hashmap_DIR - CMake variable, set to directory containing this Config file
#   CMAKE_PREFIX_PATH - CMake variable, set to root directory of this package
#   PATH - environment variable, set to bin directory of this package
#   CMAKE_DISABLE_FIND_PACKAGE_jstd_hashmap - CMake variable, disables
#     find_package(jstd_hashmap) when not REQUIRED, perhaps to force internal build

@PACKAGE_INIT@

set(PN jstd_hashmap)

# need to check that the @USE_*@ evaluate to something cmake can perform boolean logic upon
if (@USE_OPENMP@)
    set(${PN}_openmp_FOUND 1)
elseif(@USE_THREAD@)
    set(${PN}_pthread_FOUND 1)
else()
    set(${PN}_serial_FOUND 1)
endif()

check_required_components(${PN})

#-----------------------------------------------------------------------------
# Don't include targets if this file is being picked up by another
# project which has already built this as a subproject
#-----------------------------------------------------------------------------
if (NOT TARGET ${PN}::jstd_hashmap)
    include("${CMAKE_CURRENT_LIST_DIR}/${PN}Targets.cmake")

    get_property(_loc TARGET ${PN}::jstd_hashmap PROPERTY LOCATION)
    set(${PN}_LIBRARY ${_loc})
    get_property(_ill TARGET ${PN}::jstd_hashmap PROPERTY INTERFACE_LINK_LIBRARIES)
    set(${PN}_LIBRARIES ${_ill})

    get_property(_id TARGET ${PN}::jstd_hashmap PROPERTY INCLUDE_DIRECTORIES)
    set(${PN}_INCLUDE_DIR ${_id})
    get_property(_iid TARGET ${PN}::jstd_hashmap PROPERTY INTERFACE_INCLUDE_DIRECTORIES)
    set(${PN}_INCLUDE_DIRS ${_iid})
endif()
